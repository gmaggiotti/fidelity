package com.app.droidfidelity;

import java.io.InputStream;

import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.util.Log;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

public class MobileArrayAdapter extends ArrayAdapter<String> {
	private final Context context;
	private final String[] values;
	private static SparseArray<Bitmap> bitmap = new SparseArray<Bitmap>();
 
	public MobileArrayAdapter(Context context, String[] values) {
		super(context, R.layout.list_mobile, values);
		this.context = context;
		this.values = values;
		loadBitmapSArray();
	}
 
	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		LayoutInflater inflater = (LayoutInflater) context
			.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
		View rowView = inflater.inflate(R.layout.list_mobile, parent, false);
		
		TextView title = (TextView) rowView.findViewById(R.id.title);
		title.setText(getJsonElement(position,"name") );
		
		TextView textView = (TextView) rowView.findViewById(R.id.secondLine);
		textView.setText(getJsonElement(position,"shortDesc") );
		
		TextView footerText = (TextView) rowView.findViewById(R.id.footer);
		String footerString = "Direccion: "+getJsonElement(position,"address")+ " - " + "Descuelto de "+getJsonElement(position,"discount");
		footerText.setText(footerString );
 
		ImageView bmImage = (ImageView) rowView.findViewById(R.id.logo);
		bmImage.setAdjustViewBounds(true);
		bmImage.setMaxHeight(100);
		bmImage.setMaxWidth(100);
		bmImage.setImageBitmap(bitmap.get(position));
		
		return rowView;
	}
	
	private String getJsonElement( int position, String value ) {
		String result = null;
		try {
			JSONObject jsonObject = new JSONObject(values[position]);
			result = jsonObject.getString( value);
			
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return result;
	}
	
	private void loadBitmapSArray( ) {
		for(int i=0; i < values.length; i++) {
			String imgName = getJsonElement(i, "logo_img");
			new DownloadImageTask(i).execute(Consts.url+"/imgs/"+imgName);
		}	
	}
	
	
	private class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {
		private int position = 0;

		public DownloadImageTask(int position) {
			this.position = position;
		}

		protected Bitmap doInBackground(String... urls) {
			String urldisplay = urls[0];
			Bitmap mIcon11 = null;
			try {
				InputStream in = new java.net.URL(urldisplay).openStream();
				mIcon11 = BitmapFactory.decodeStream(in);
			} catch (Exception e) {
				Log.e("Error", e.getMessage());
				e.printStackTrace();
			}
			return mIcon11;
		}

		protected void onPostExecute(Bitmap result) {
			bitmap.put(position, result);
		}
	}

	
	private  Bitmap loadBitmap(String urldisplay) {
		Bitmap mIcon11 = null;
		try {
			InputStream in = new java.net.URL(urldisplay).openStream();
			mIcon11 = BitmapFactory.decodeStream(in);
		} catch (Exception e) {
			Log.e("Error", e.getMessage());
			e.printStackTrace();
		}
		return mIcon11;
	}
}
